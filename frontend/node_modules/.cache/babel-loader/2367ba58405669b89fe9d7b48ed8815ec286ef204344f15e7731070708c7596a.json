{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shubham_Raj_technical_assessment\\\\frontend\\\\src\\\\nodes\\\\components\\\\BaseNode.jsx\",\n  _s = $RefreshSig$();\nimport { Handle, Position } from \"reactflow\";\nimport { useState, useEffect } from \"react\";\nimport FieldRenderer from \"./FieldRenderer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BaseNode = ({\n  id,\n  label,\n  data = {},\n  customFields = [],\n  inputHandles = [],\n  outputHandles = [],\n  nodeStyle = {},\n  handleStyle = {},\n  children,\n  className = null\n}) => {\n  _s();\n  const [nodeData, setNodeData] = useState(data);\n  const defaultHandleStyle = {\n    background: \"#fff\",\n    width: \"15px\",\n    height: \"15px\",\n    border: \"1px solid #000\"\n  };\n\n  // Ensure default values are set when the component mounts\n  useEffect(() => {\n    const defaultData = {};\n    customFields.forEach(field => {\n      if (!nodeData[field.name]) {\n        if (field.name.includes(\"Name\")) {\n          // Default naming logic for fields like 'inputName' or 'outputName'\n          defaultData[field.name] = id.replace(`custom${label}-`, `${label.toLowerCase()}_`);\n        } else {\n          defaultData[field.name] = field.default || \"\";\n        }\n      }\n    });\n    setNodeData(prevData => ({\n      ...prevData,\n      ...defaultData\n    }));\n  }, [id, customFields]);\n  const handleInputChange = (fieldName, value) => {\n    setNodeData({\n      ...nodeData,\n      [fieldName]: value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...nodeStyle\n    },\n    className: `px-5 py-4 w-80 border-2 bg-white flex flex-col gap-2  border-blue-600 shadow-lg rounded-lg  ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-blue-500 text-lg\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), children && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-4\",\n      children: customFields === null || customFields === void 0 ? void 0 : customFields.map((field, index) => /*#__PURE__*/_jsxDEV(FieldRenderer, {\n        field: field,\n        value: nodeData[field.name],\n        onChange: handleInputChange,\n        label: field.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), inputHandles === null || inputHandles === void 0 ? void 0 : inputHandles.map((handle, index) => /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Left,\n      id: handle.id,\n      style: {\n        ...handleStyle,\n        ...handle.style,\n        ...defaultHandleStyle\n      },\n      className: \"bg-white w-3 h-3 rounded-full border-1 border-purple-500\"\n    }, `${id}-input-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)), outputHandles === null || outputHandles === void 0 ? void 0 : outputHandles.map((handle, index) => /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Right,\n      id: handle.id,\n      className: \"bg-white w-3 h-3 rounded-full border-1 border-purple-500\",\n      style: {\n        ...handleStyle,\n        ...handle.style,\n        ...defaultHandleStyle\n      }\n    }, `${id}-output-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseNode, \"f8YGvg/DvP8BSQ1jE4Qu+Qj+g0Y=\");\n_c = BaseNode;\nvar _c;\n$RefreshReg$(_c, \"BaseNode\");","map":{"version":3,"names":["Handle","Position","useState","useEffect","FieldRenderer","jsxDEV","_jsxDEV","BaseNode","id","label","data","customFields","inputHandles","outputHandles","nodeStyle","handleStyle","children","className","_s","nodeData","setNodeData","defaultHandleStyle","background","width","height","border","defaultData","forEach","field","name","includes","replace","toLowerCase","default","prevData","handleInputChange","fieldName","value","style","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onChange","handle","type","position","Left","Right","_c","$RefreshReg$"],"sources":["E:/Shubham_Raj_technical_assessment/frontend/src/nodes/components/BaseNode.jsx"],"sourcesContent":["import { Handle, Position } from \"reactflow\";\r\nimport { useState, useEffect } from \"react\";\r\nimport FieldRenderer from \"./FieldRenderer\";\r\n\r\nexport const BaseNode = ({\r\n  id,\r\n  label,\r\n  data = {},\r\n  customFields = [],\r\n  inputHandles = [],\r\n  outputHandles = [],\r\n  nodeStyle = {},\r\n  handleStyle = {},\r\n  children,\r\n  className = null,\r\n}) => {\r\n  const [nodeData, setNodeData] = useState(data);\r\n\r\n  const defaultHandleStyle = {\r\n    background: \"#fff\",\r\n    width: \"15px\",\r\n    height: \"15px\",\r\n    border: \"1px solid #000\",\r\n  };\r\n\r\n  // Ensure default values are set when the component mounts\r\n  useEffect(() => {\r\n    const defaultData = {};\r\n    customFields.forEach((field) => {\r\n      if (!nodeData[field.name]) {\r\n        if (field.name.includes(\"Name\")) {\r\n          // Default naming logic for fields like 'inputName' or 'outputName'\r\n          defaultData[field.name] = id.replace(\r\n            `custom${label}-`,\r\n            `${label.toLowerCase()}_`\r\n          );\r\n        } else {\r\n          defaultData[field.name] = field.default || \"\";\r\n        }\r\n      }\r\n    });\r\n    setNodeData((prevData) => ({ ...prevData, ...defaultData }));\r\n  }, [id, customFields]);\r\n\r\n  const handleInputChange = (fieldName, value) => {\r\n    setNodeData({\r\n      ...nodeData,\r\n      [fieldName]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...nodeStyle,\r\n      }}\r\n      className={`px-5 py-4 w-80 border-2 bg-white flex flex-col gap-2  border-blue-600 shadow-lg rounded-lg  ${className}`}\r\n    >\r\n      <div>\r\n        <span className=\"text-blue-500 text-lg\">{label}</span>\r\n      </div>\r\n      {children && <div>{children}</div>}\r\n      <div className=\"flex flex-col gap-4\">\r\n        {customFields?.map((field, index) => (\r\n          <FieldRenderer\r\n            key={index}\r\n            field={field}\r\n            value={nodeData[field.name]}\r\n            onChange={handleInputChange}\r\n            label={field.label}\r\n          />\r\n        ))}\r\n      </div>\r\n      {inputHandles?.map((handle, index) => (\r\n        <Handle\r\n          key={`${id}-input-${index}`}\r\n          type=\"target\"\r\n          position={Position.Left}\r\n          id={handle.id}\r\n          style={{ ...handleStyle, ...handle.style, ...defaultHandleStyle }}\r\n          className=\"bg-white w-3 h-3 rounded-full border-1 border-purple-500\"\r\n        />\r\n      ))}\r\n      {outputHandles?.map((handle, index) => (\r\n        <Handle\r\n          key={`${id}-output-${index}`}\r\n          type=\"source\"\r\n          position={Position.Right}\r\n          id={handle.id}\r\n          className=\"bg-white w-3 h-3 rounded-full border-1 border-purple-500\"\r\n          style={{ ...handleStyle, ...handle.style, ...defaultHandleStyle }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}