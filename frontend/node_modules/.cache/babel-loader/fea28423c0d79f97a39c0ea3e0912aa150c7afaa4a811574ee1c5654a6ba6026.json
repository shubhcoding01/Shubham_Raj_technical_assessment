{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shubham_Raj_technical_assessment\\\\frontend\\\\src\\\\ui.js\",\n  _s = $RefreshSig$();\n// ui.js\n// Displays the drag-and-drop UI\n// --------------------------------------------------\n\nimport { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/InputNode.jsx';\nimport { LLMNode } from './nodes/LLMNode.jsx';\nimport { OutputNode } from './nodes/OutputNode.jsx';\nimport { TextNode } from './nodes/TextNode.jsx';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSize = 20;\nconst proOptions = {\n  hideAttribution: true\n};\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode\n};\nconst selector = state => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect\n});\nexport const PipelineUI = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect\n  } = useStore(selector, shallow);\n  const getInitNodeData = (nodeID, type) => {\n    return {\n      id: nodeID,\n      nodeType: `${type}`\n    };\n  };\n  const onDrop = useCallback(event => {\n    var _event$dataTransfer;\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    if (event !== null && event !== void 0 && (_event$dataTransfer = event.dataTransfer) !== null && _event$dataTransfer !== void 0 && _event$dataTransfer.getData('application/reactflow')) {\n      const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n      const type = appData === null || appData === void 0 ? void 0 : appData.nodeType;\n      if (typeof type === 'undefined' || !type) return;\n      const position = reactFlowInstance.project({\n        x: event.clientX - reactFlowBounds.left,\n        y: event.clientY - reactFlowBounds.top\n      });\n      const nodeID = getNodeID(type);\n      const newNode = {\n        id: nodeID,\n        type,\n        position,\n        data: getInitNodeData(nodeID, type)\n      };\n      addNode(newNode);\n    }\n  }, [reactFlowInstance, getNodeID, addNode] // ✅ Fixed ESLint warning\n  );\n\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: reactFlowWrapper,\n    style: {\n      width: '100vw',\n      height: '70vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onDrop: onDrop,\n      onDragOver: onDragOver,\n      onInit: setReactFlowInstance,\n      nodeTypes: nodeTypes,\n      proOptions: proOptions,\n      snapGrid: [gridSize, gridSize],\n      connectionLineType: \"smoothstep\",\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: gridSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(PipelineUI, \"h1WzQvpnWrheoVUBQOslWqW8+CY=\", false, function () {\n  return [useStore];\n});\n_c = PipelineUI;\nvar _c;\n$RefreshReg$(_c, \"PipelineUI\");","map":{"version":3,"names":["useState","useRef","useCallback","ReactFlow","Controls","Background","MiniMap","useStore","shallow","InputNode","LLMNode","OutputNode","TextNode","jsxDEV","_jsxDEV","gridSize","proOptions","hideAttribution","nodeTypes","customInput","llm","customOutput","text","selector","state","nodes","edges","getNodeID","addNode","onNodesChange","onEdgesChange","onConnect","PipelineUI","_s","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","getInitNodeData","nodeID","type","id","nodeType","onDrop","event","_event$dataTransfer","preventDefault","reactFlowBounds","current","getBoundingClientRect","dataTransfer","getData","appData","JSON","parse","position","project","x","clientX","left","y","clientY","top","newNode","data","onDragOver","dropEffect","ref","style","width","height","children","onInit","snapGrid","connectionLineType","color","gap","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Shubham_Raj_technical_assessment/frontend/src/ui.js"],"sourcesContent":["// ui.js\n// Displays the drag-and-drop UI\n// --------------------------------------------------\n\nimport { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Controls, Background, MiniMap } from 'reactflow';\nimport { useStore } from './store';\nimport { shallow } from 'zustand/shallow';\nimport { InputNode } from './nodes/InputNode.jsx';\nimport { LLMNode } from './nodes/LLMNode.jsx';\nimport { OutputNode } from './nodes/OutputNode.jsx';\nimport { TextNode } from './nodes/TextNode.jsx';\n\nimport 'reactflow/dist/style.css';\n\nconst gridSize = 20;\nconst proOptions = { hideAttribution: true };\n\nconst nodeTypes = {\n  customInput: InputNode,\n  llm: LLMNode,\n  customOutput: OutputNode,\n  text: TextNode,\n};\n\nconst selector = (state) => ({\n  nodes: state.nodes,\n  edges: state.edges,\n  getNodeID: state.getNodeID,\n  addNode: state.addNode,\n  onNodesChange: state.onNodesChange,\n  onEdgesChange: state.onEdgesChange,\n  onConnect: state.onConnect,\n});\n\nexport const PipelineUI = () => {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const {\n    nodes,\n    edges,\n    getNodeID,\n    addNode,\n    onNodesChange,\n    onEdgesChange,\n    onConnect,\n  } = useStore(selector, shallow);\n\n  const getInitNodeData = (nodeID, type) => {\n    return { id: nodeID, nodeType: `${type}` };\n  };\n\n  const onDrop = useCallback(\n    (event) => {\n      event.preventDefault();\n\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n      if (event?.dataTransfer?.getData('application/reactflow')) {\n        const appData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n        const type = appData?.nodeType;\n\n        if (typeof type === 'undefined' || !type) return;\n\n        const position = reactFlowInstance.project({\n          x: event.clientX - reactFlowBounds.left,\n          y: event.clientY - reactFlowBounds.top,\n        });\n\n        const nodeID = getNodeID(type);\n        const newNode = {\n          id: nodeID,\n          type,\n          position,\n          data: getInitNodeData(nodeID, type),\n        };\n\n        addNode(newNode);\n      }\n    },\n    [reactFlowInstance, getNodeID, addNode] // ✅ Fixed ESLint warning\n  );\n\n  const onDragOver = useCallback((event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n\n  return (\n    <div ref={reactFlowWrapper} style={{ width: '100vw', height: '70vh' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onDrop={onDrop}\n        onDragOver={onDragOver}\n        onInit={setReactFlowInstance}\n        nodeTypes={nodeTypes}\n        proOptions={proOptions}\n        snapGrid={[gridSize, gridSize]}\n        connectionLineType=\"smoothstep\"\n      >\n        <Background color=\"#aaa\" gap={gridSize} />\n        <Controls />\n        <MiniMap />\n      </ReactFlow>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}