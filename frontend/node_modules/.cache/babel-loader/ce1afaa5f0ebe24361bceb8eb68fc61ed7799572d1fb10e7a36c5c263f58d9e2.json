{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shubham_Raj_technical_assessment\\\\frontend\\\\src\\\\submit.js\",\n  _s = $RefreshSig$();\n// src/submit.js\nimport React from 'react';\nimport { useReactFlow } from 'reactflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function submitPipeline(nodes, edges) {\n  try {\n    const response = await fetch('http://localhost:8000/pipelines/parse', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nodes,\n        edges\n      })\n    });\n    const result = await response.json();\n    alert(`✅ Pipeline Info:\n- Nodes: ${result.num_nodes}\n- Edges: ${result.num_edges}\n- Is DAG: ${result.is_dag ? 'Yes' : 'No'}`);\n  } catch (error) {\n    alert('❌ Submission failed: ' + error.message);\n  }\n}\nexport const SubmitButton = () => {\n  _s();\n  const {\n    getNodes,\n    getEdges\n  } = useReactFlow();\n  const handleClick = () => {\n    const nodes = getNodes().map(({\n      id\n    }) => ({\n      id\n    }));\n    const edges = getEdges().map(({\n      source,\n      target\n    }) => ({\n      source,\n      target\n    }));\n    submitPipeline(nodes, edges);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border-t border-gray-700 bg-zinc-900\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: \"px-4 py-2 bg-indigo-600 hover:bg-indigo-500 text-white font-semibold rounded\",\n      children: \"Submit Pipeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitButton, \"DgDJaM/Sq5BWE2bxCfBmeTzddMY=\", false, function () {\n  return [useReactFlow];\n});\n_c = SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["React","useReactFlow","jsxDEV","_jsxDEV","submitPipeline","nodes","edges","response","fetch","method","headers","body","JSON","stringify","result","json","alert","num_nodes","num_edges","is_dag","error","message","SubmitButton","_s","getNodes","getEdges","handleClick","map","id","source","target","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Shubham_Raj_technical_assessment/frontend/src/submit.js"],"sourcesContent":["// src/submit.js\nimport React from 'react';\nimport { useReactFlow } from 'reactflow';\n\nexport async function submitPipeline(nodes, edges) {\n  try {\n    const response = await fetch('http://localhost:8000/pipelines/parse', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ nodes, edges }),\n    });\n\n    const result = await response.json();\n\n    alert(`✅ Pipeline Info:\n- Nodes: ${result.num_nodes}\n- Edges: ${result.num_edges}\n- Is DAG: ${result.is_dag ? 'Yes' : 'No'}`);\n  } catch (error) {\n    alert('❌ Submission failed: ' + error.message);\n  }\n}\n\nexport const SubmitButton = () => {\n  const { getNodes, getEdges } = useReactFlow();\n\n  const handleClick = () => {\n    const nodes = getNodes().map(({ id }) => ({ id }));\n    const edges = getEdges().map(({ source, target }) => ({ source, target }));\n    submitPipeline(nodes, edges);\n  };\n\n  return (\n    <div className=\"p-4 border-t border-gray-700 bg-zinc-900\">\n      <button\n        onClick={handleClick}\n        className=\"px-4 py-2 bg-indigo-600 hover:bg-indigo-500 text-white font-semibold rounded\"\n      >\n        Submit Pipeline\n      </button>\n    </div>\n  );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,OAAO,eAAeC,cAAcA,CAACC,KAAK,EAAEC,KAAK,EAAE;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAM,CAAC;IACvC,CAAC,CAAC;IAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAEpCC,KAAK,CAAC;AACV,WAAWF,MAAM,CAACG,SAAS;AAC3B,WAAWH,MAAM,CAACI,SAAS;AAC3B,YAAYJ,MAAM,CAACK,MAAM,GAAG,KAAK,GAAG,IAAI,EAAE,CAAC;EACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdJ,KAAK,CAAC,uBAAuB,GAAGI,KAAK,CAACC,OAAO,CAAC;EAChD;AACF;AAEA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGxB,YAAY,CAAC,CAAC;EAE7C,MAAMyB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMrB,KAAK,GAAGmB,QAAQ,CAAC,CAAC,CAACG,GAAG,CAAC,CAAC;MAAEC;IAAG,CAAC,MAAM;MAAEA;IAAG,CAAC,CAAC,CAAC;IAClD,MAAMtB,KAAK,GAAGmB,QAAQ,CAAC,CAAC,CAACE,GAAG,CAAC,CAAC;MAAEE,MAAM;MAAEC;IAAO,CAAC,MAAM;MAAED,MAAM;MAAEC;IAAO,CAAC,CAAC,CAAC;IAC1E1B,cAAc,CAACC,KAAK,EAAEC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACEH,OAAA;IAAK4B,SAAS,EAAC,0CAA0C;IAAAC,QAAA,eACvD7B,OAAA;MACE8B,OAAO,EAAEP,WAAY;MACrBK,SAAS,EAAC,8EAA8E;MAAAC,QAAA,EACzF;IAED;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACd,EAAA,CAnBWD,YAAY;EAAA,QACQrB,YAAY;AAAA;AAAAqC,EAAA,GADhChB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}